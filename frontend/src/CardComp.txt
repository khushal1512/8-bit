import React from "react";
import PropTypes from "prop-types";
import { Card, CardHeader, CardBody, CardFooter, Typography, Button } from "@material-tailwind/react";
import { motion } from "framer-motion";
import { SlideRight } from "./utility/animation.js";
import { useNavigate } from "react-router-dom"; // Import useNavigate

const CardComp = ({ icon, heading, text }) => {
  const navigate = useNavigate(); // Hook to handle navigation

  const handleReadMore = () => {
    navigate("/overlay"); // Navigate to /overlay page when button is clicked
  };

  return (
    <Card className="mt-8 mx-4 sm:mx-10 lg:mx-8 max-w-xs sm:max-w-lg lg:max-w-lg bg-[white] shadow-lg rounded-lg overflow-hidden h-[500px]">
      {/* Card Header with Image */}
      <CardHeader color="blue-gray" className="relative h-56 rounded-t-lg">
        <img
          className="w-full h-full object-cover rounded-t-lg"
          src={icon}
          alt={heading}
        />
      </CardHeader>

      {/* Card Body */}
      <CardBody className="px-4 py-6">
        <Typography variant="h5" color="blue-gray" className="font-semibold text-lg mb-2">
          {heading}
        </Typography>
        <Typography className="text-gray-600">
          {text}
        </Typography>
      </CardBody>

      {/* Card Footer with Animated "Read More" Button */}
      <CardFooter className="pt-4 px-4 pb-6 flex justify-center">
        <motion.div
          variants={SlideRight(0.6)}  // Applying SlideRight animation with a delay of 0.6s
          initial="initial"
          animate="animate"
          className="w-fit"
        >
          <Button
            onClick={handleReadMore} // Call handleReadMore when button is clicked
            className="bg-white text-black border-4 border-black hover:bg-black hover:text-white font-semibold py-2 px-6 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
            Read More
          </Button>
        </motion.div>
      </CardFooter>
    </Card>
  );
};

CardComp.propTypes = {
  icon: PropTypes.string.isRequired,
  heading: PropTypes.string.isRequired,
  text: PropTypes.string.isRequired,
};

export default CardComp;
